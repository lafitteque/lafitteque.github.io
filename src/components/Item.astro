---
import "../styles/global.css"; // Importe le CSS global

const { type, titre, tag, searchDesc } = Astro.props;
const typeColors = {
  definition: "success",
  defprop: "success",

  propriete: "warning",
  proposition: "warning",
  corollaire: "warning",
  lemme: "warning",
  consequence: "warning",
  
  theoreme: "error",

  methode: "neutral-content"
};

const borderWidths = {
  definition: 6,
  defprop: 6,
  theoreme: 6,
  propriete: 6,
  proposition: 6,

  corollaire: 4,
  lemme: 4,
  consequence: 4,

  methode: 4,
};

const textValues = {
  definition: "Définition",
  theoreme: "Théorème",
  propriete: "Propriété",
  proposition: "Proposition",
  corollaire: "Corollaire",
  lemme: "Lemme",
  consequence: "Conséquence",
  methode: "Méthode",
  defprop: "Définition - Propriété",
};

var filiere = "";
var chapitre = ";";
if (Astro.url.pathname.length > 2) {
  filiere = Astro.url.pathname.slice(1, 20).split("/")[0];
  chapitre = Astro.url.pathname.slice(1, 20).split("/")[1];
}

const tagweight = (tag == "admis") * 2;
const itemColorName = typeColors[type]; // Couleur par défaut si type inconnu
const itemWidth = borderWidths[type];
const itemText = textValues[type];
---

<!-- <h5 class="h-0 w-"></h5>
<div class="pagefind-metadata" aria-hidden="true">
  <span data-pagefind-meta="titre">{titre}</span>
  <span data-pagefind-meta="type">{type}</span>
  <span data-pagefind-meta="filiere">{filiere}</span>
  <span data-pagefind-meta="searchDesc">{searchDesc}</span>
  <span data-pagefind-meta="id"
    >{`${filiere}-${chapitre}--${type}-${titre}`}</span
  >
</div> -->
<div
  class="w-0 h-0 z-[-50] text-base-content overflow-hidden"
  data-pagefind-body
  aria-hidden="true"
  id=`${filiere}-${type}-${titre.split(" ").join("_")}-${searchDesc ? searchDesc.split(" ").join("_") : ""}`
>
  <span data-pagefind-meta="titre">{titre}</span>
  <span data-pagefind-meta="type">{type}</span>
  <span data-pagefind-meta="filiere">{filiere}</span>
  <span data-pagefind-meta="searchDesc">{searchDesc}</span>
</div>

<div
  class="item-container before:border-base-content mt-2 mb-1 z-10 "
  style={`border: ${itemWidth}px solid color-mix(in oklab, var(--color-${itemColorName}) 70%, black 30%); border-radius: 5px;border-top: none; border-right: none; border-bottom: none`}
  data-pagefind-ignore="all"
>
  <div class="p-1
    min-h-10 text-lg" style=`background-color: color-mix(in oklab, var(--color-${itemColorName}) 95%, black 5%);`>
    <div class="float-top">
      <span class="item-number text-base w-8 h-8 text-center rounded-full mr-2"
      ></span>

      <strong class="inline-block font-bold">
        {itemText} : {titre}
      </strong>
      <span
        class="inline-block ml-8"
        style=`border: solid ${tagweight}px #ff4545; margin-right: 1rem; border-radius: 10%`
      >
        {tag}
      </span>
    </div>
  </div>
  <div class="item-body p-2 overflow-x-auto bg-base-200" style=`border: 4px solid color-mix(in oklab, var(--color-${itemColorName}) 80%, var(--color-base-100) 20%); border-right : none; border-top: none; border-bottom: none;`>
    <div style="margin: 0 5px;">
      <slot />
    </div>
  </div>
</div>

<style>

  .item-container .item-number::before {
    content: counter(item-counter); /* Affiche la valeur actuelle du compteur */
    display: inline-block;
    width: 30px;
    height: 30px;
    line-height: 25px;
    border: 2px solid var(--color-base-content);
    border-radius: 50%;
    text-align: center;
    margin-right: 5px;
    margin-left: 5px;
    font-weight: bold;
    color: var(--base-content);
  }

  .pagefind-metadata {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
    /* Don't use display: none or visibility: hidden */
  }
</style>

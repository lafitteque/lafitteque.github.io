<div class="m-auto mx-auto">
    <div id="sketch-holder-limite"></div>
</div>
<script type="module" is:inline>
    import { Graph, MathFunction, GraphInfo } from "/scripts/graphClasses.js";
    var myGraph;
    var info;
    var epsilon = 0.5;

    function setup() {
        var canvasDOM2 = createCanvas(200, 40);
        var holder = document.getElementById("sketch-holder-limite");
        holder.appendChild(canvas);
        canvasDOM2.mouseClicked(customMouseClicked);
        background(0);
        fill(255);
        text("Cliquer pour voir le graphique", 20, 25);
    }

    function customMouseClicked() {
        var firstTime = height === 40;
        var n = firstTime ? 2 : floor(myGraph.graphToCoord(mouseX, mouseY)[0]);
        var limit = 1;

        resizeCanvas(
            min(Math.floor((window.innerWidth * 0.7) / 2) * 2, 900),
            400,
        );
        background(0);

        info = new GraphInfo(-1, 20, -1, 2, 10, 20, 1);
        myGraph = new Graph(info);

        var epsilon = findEpsilon(n, limit, u);
        var areaBegin = myGraph.coordToGraph(n, limit + epsilon);

        noStroke();
        fill(100, 100, 100);
        rect(
            areaBegin[0],
            areaBegin[1],
            info.width2 - info.tickOffset,
            info.unitStepY * 2 * epsilon,
        );

        for (let i = 0; i <= 20; i += 1) {
            myGraph.plotPoint(i, u(i), "x", [255, 100, 100], 3);
        }

        myGraph.drawGraphAxes();

        // Double arrow with 2ε
        var arrowOffset = 2.5;
        myGraph.plotArrow(
            n + arrowOffset,
            limit - epsilon / 3,
            n + arrowOffset,
            limit - epsilon,
        );
        myGraph.plotArrow(
            n + arrowOffset,
            limit + epsilon / 3,
            n + arrowOffset,
            limit + epsilon,
        );

        strokeWeight(2);
        fill(255, 50, 50);
        stroke(255, 50, 50);
        line(
            myGraph.coordToGraph(-0.5, 0)[0],
            myGraph.coordToGraph(0, limit)[1],
            myGraph.coordToGraph(20, 0)[0],
            myGraph.coordToGraph(0, limit)[1],
        );
        textStyle(NORMAL);
        textSize(16);
        text(
            "l i m i t e  =  1",
            myGraph.coordToGraph(-0.8, 0)[0],
            myGraph.coordToGraph(0, 0.8)[1],
        );

        strokeWeight(1);
        fill(50, 255, 50);
        stroke(50, 255, 50);
        textSize(16);
        text(
            "2ε",
            myGraph.coordToGraph(n + arrowOffset - 0.2, 0)[0],
            myGraph.coordToGraph(0, limit - 0.05)[1],
        );
    }

    function findEpsilon(n, limit, v) {
        var maxN = 100;
        var highestDistance = 0;
        for (let k = n; k <= maxN; k += 1) {
            highestDistance = max(highestDistance, abs(limit - v(k)));
        }
        return highestDistance;
    }

    function u(i) {
        return 1 - (3 / (0.2*i + 2)) * cos(i );
    }

    window.setup = setup;
</script>

---
//import "../styles/global.css"; // Importe le CSS global
import { suid } from '../libs/utils';

const uniqueId = suid();  // Générer un uniqueId pour chaque instance du composant
const { title, content } = Astro.props;
---

<style>
  .wave-block {
    display:flex;
    align-items: stretch;
    color: black;
    margin-left: 2rem;
  }

  .wave {
    flex: 0 0 auto;
    width: 12px;
    align-items: center;
    position: relative;
    color: black;
  }

  .wave svg {
    display: block;
    width: 100%;
    color: black;
  }

</style>



<div class="wave-block" id={`wave-block-${uniqueId}`}>
  <div class="wave" style="padding: 0rem 0.5rem;">
    <!-- Ajout du uniqueId dans l'ID de l'élément SVG -->
    <svg class="dynamic-wave" id={`dynamic-wave-${uniqueId}`} xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="none"></svg>
  </div>
  <div class="content" id={`content-${uniqueId}`} >
    <b> Remarque : </b>
    <slot/>
  </div>
</div>

<!-- Charger le script côté client -->
<script type="module">
  import generateWave from '/scripts/dynamicWave.js';
  document.addEventListener("DOMContentLoaded", () => {
  requestAnimationFrame(() => {
    const headers = document.querySelectorAll('.wave-block');
    headers.forEach(header => {
      const uniqueId = header.id.slice(11);
      const content = document.querySelector(`#content-${uniqueId}`);
      const waveSvg = document.querySelector(`#dynamic-wave-${uniqueId}`);

      if (content && waveSvg) {
        const rect = content.getBoundingClientRect();
        const height = rect.height;

        const amplitude = 10;
        const frequency = 2.5;
        const pathData = generateWave(height, amplitude, frequency);

        waveSvg.setAttribute('viewBox', `-${amplitude} 0 ${2 * amplitude} ${height}`);
        waveSvg.setAttribute('height', height);
        waveSvg.innerHTML = `<path d="${pathData}" fill="none" stroke="#707070" stroke-width="2" />`;
      }
    });
  });
});
</script>

